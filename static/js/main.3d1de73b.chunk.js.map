{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","additem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d1de73b.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({toDo,done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n    state = {\r\n        term: ''\r\n    };\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                    className=\"search-input\"\r\n                    placeholder='Type here to search'\r\n                    value={this.state.term}\r\n                    onChange={this.onSearchChange}/>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component{\r\n    render() {\r\n        const {label,onDeleted,onToggleImportant,onToggleDone,important,done} = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    onClick={onToggleDone}>\r\n                    {label}\r\n                </span>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\"></i>\r\n                </button>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted,onToggleImportant,onToggleDone}) => {\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    {...itemProps}\r\n                    onDeleted={() => {\r\n                        onDeleted(id);\r\n                    }}\r\n                    onToggleImportant={()=> onToggleImportant(id)}\r\n                    onToggleDone={()=> onToggleDone(id)}\r\n                />\r\n            </li>\r\n        )\r\n    });\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const {filter,onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name,label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button\r\n                    type=\"button\"\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={()=>{onFilterChange(name)}}>{label}</button>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\n\r\nexport default class ItemAddForm extends Component{\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({label:''})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"What needs to be done\"\r\n                value={this.state.label}/>\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={() => this.props.onItemAdded}>Add Item</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\nexport default class App extends Component{\r\n\r\n    maxId = 100;\r\n    state = {\r\n        todoData:[\r\n            this.createTodoItem('Drink Coffe'),\r\n            this.createTodoItem('make'),\r\n            this.createTodoItem('have a lunch')\r\n        ],\r\n        term:'',\r\n        filter:'all'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return{\r\n            label: label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    };\r\n    additem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return{\r\n                todoData:newArray\r\n            }\r\n        })\r\n    };\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem,\r\n            [propName]: !oldItem[propName]};\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n\r\n    };\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n    };\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n    onSearchChange = (term) => {\r\n      this.setState({term});\r\n    };\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n    filter(items, filter){\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                />\r\n                <ItemAddForm onItemAdded={this.additem}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}